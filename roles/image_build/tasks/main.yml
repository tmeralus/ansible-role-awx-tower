---
- name: Set global version if not provided
  set_fact:
    awx_version: "{{ lookup('file', playbook_dir + '/../VERSION') }}"
  when: awx_version is not defined

- name: Verify awx-logos directory exists for official install
  stat:
    path: "{{ awx_build_repo_dir }}/awx-logos"
  delegate_to: localhost
  register: logosdir
  failed_when: logosdir.stat.isdir is not defined or not logosdir.stat.isdir
  when: awx_official|default(false)|bool

- name: Copy logos for inclusion in sdist
  copy:
    src: "{{ awx_build_repo_dir }}/awx-logos/awx/ui/client/assets"
    dest: "../awx/ui/client/"
  delegate_to: localhost
  when: awx_official|default(false)|bool

- name: Set sdist file name
  set_fact:
    awx_sdist_file: "awx-{{ awx_version }}.tar.gz"

- name: AWX Distribution
  debug:
    msg: "{{ awx_sdist_file }}"

- name: Stat distribution file
  stat:
    path: "{{ awx_repo_dir }}/dist/{{ awx_sdist_file }}"
  delegate_to: localhost
  register: sdist

# awx+_repo dir points to /root/awx/dist/awx-devel.tar.gz
# instead of /home/ansible/awx
# could be cause of issues with building
# using become flag in playbook main force playbook to run as root
# chaning the dir from expected /home/ansible/awx to /root/awx
# test changes now
- name: Clean distribution
  shell: "make clean"
  args:
    chdir: "{{ awx_repo_dir }}"
  ignore_errors: yes
  when: not sdist.stat.exists
  delegate_to: localhost

- name: Pull {{ docker_container_repo }} container
  docker_image:
    name: "{{ docker_container_repo }}"
    source: pull

- name: Build sdist builder image
  docker_image:
    build:
      path: "{{ role_path }}/files"
      dockerfile: Dockerfile.sdist
    name: awx_sdist_builder
    tag: "{{ awx_version }}"
    source: build
    force_source: yes
  delegate_to: localhost
  when: use_container_for_build|default(true)|bool
  become: true
  tags:
    - build

- name: Build AWX distribution using container
  docker_container:
    image: "awx_sdist_builder:{{ awx_version }}"
    name: awx_sdist_builder
    state: started
    detach: false
    volumes:
      - "../:/awx:Z" 
  delegate_to: localhost
  when: use_container_for_build|default(true)|bool
  become: true

- name: Build AWX distribution locally
  shell: make sdist
  args:
    chdir: "{{ awx_repo_dir }}"
  delegate_to: localhost
  when: not use_container_for_build|default(true)|bool
  # become: true

- name: Set docker build base path
  set_fact:
    docker_base_path: "{{ awx_local_base_config_path|default('/tmp') }}/docker-image"
  # become: true

- name: Set awx_web image name
  set_fact:
    web_image: "{{ web_image|default('awx_web') }}"
  # become: true

- name: Set awx_task image name
  set_fact:
    task_image: "{{ task_image|default('awx_task') }}"
  # become: true

- name: Ensure directory exists
  file:
    path: "{{ docker_base_path }}"
    state: directory
  delegate_to: localhost
  # become: true

- name: Stage sdist
  copy:
    src: "../dist/{{ awx_sdist_file }}"
    dest: "{{ docker_base_path }}/{{ awx_sdist_file }}"
  delegate_to: localhost
  # become: true

- name: Template web Dockerfile
  template:
    src: Dockerfile.j2
    dest: "{{ docker_base_path }}/Dockerfile"
  delegate_to: localhost
  # become: true

- name: Template task Dockerfile
  template:
    src: Dockerfile.task.j2
    dest: "{{ docker_base_path }}/Dockerfile.task"
  delegate_to: localhost
  # become: true

- name: Stage launch_awx
  copy:
    src: launch_awx.sh
    dest: "{{ docker_base_path }}/launch_awx.sh"
    mode: '0700'
  delegate_to: localhost
  # become: true

- name: Stage launch_awx_task
  copy:
    src: launch_awx_task.sh
    dest: "{{ docker_base_path }}/launch_awx_task.sh"
    mode: '0700'
  delegate_to: localhost
  # become: true

- name: Stage nginx.conf
  template:
    src: nginx.conf
    dest: "{{ docker_base_path }}/nginx.conf"
  delegate_to: localhost
  # become: true

- name: Stage supervisor.conf
  copy:
    src: supervisor.conf
    dest: "{{ docker_base_path }}/supervisor.conf"
  delegate_to: localhost
  # become: true

- name: Stage supervisor_task.conf
  copy:
    src: supervisor_task.conf
    dest: "{{ docker_base_path }}/supervisor_task.conf"
  delegate_to: localhost
  # become: true

- name: Stage settings.py
  copy:
    src: settings.py
    dest: "{{ docker_base_path }}/settings.py"
  delegate_to: localhost
  # become: true

- name: Stage requirements
  copy:
    src: ../requirements/
    dest: "{{ docker_base_path }}/requirements"
  delegate_to: localhost
  # become: true

- name: Stage config watcher
  copy:
    src: ../tools/scripts/config-watcher
    dest: "{{ docker_base_path }}/config-watcher"
  delegate_to: localhost
  # become: true

- name: Stage Makefile
  copy:
    src: ../Makefile
    dest: "{{ docker_base_path }}/Makefile"
  delegate_to: localhost
  # become: true

- name: Stage ansible repo
  copy:
    src: 'ansible.repo'
    dest: '{{ docker_base_path }}/ansible.repo'
  delegate_to: localhost
  # become: true

- name: Stage ansible repo key
  copy:
    src: 'RPM-GPG-KEY-ansible-release'
    dest: '{{ docker_base_path }}/RPM-GPG-KEY-ansible-release'
  delegate_to: localhost
  # become: true

- name: Build base web image
  docker_image:
    build:
      path: "{{ docker_base_path }}"
      dockerfile: Dockerfile
    name: "{{ web_image }}"
    tag: "{{ awx_version }}"
    source: build
    force_source: yes
  delegate_to: localhost
  # become: true

- name: Build base task image
  docker_image:
    build:
      path: "{{ docker_base_path }}"
      dockerfile: Dockerfile.task
    name: "{{ task_image }}"
    tag: "{{ awx_version }}"
    pull: no
    source: build
    force_source: yes
  delegate_to: localhost
  # become: true

- name: Tag task and web images as latest
  command: "docker tag {{ item }}:{{ awx_version }} {{ item }}:latest"
  delegate_to: localhost
  with_items:
    - "{{ task_image }}"
    - "{{ web_image }}"
  # become: true

- name: Clean docker base directory
  file:
    path: "{{ docker_base_path }}"
    state: absent
  when: cleanup_docker_base|default(True)|bool
  delegate_to: localhost
  # become: true
